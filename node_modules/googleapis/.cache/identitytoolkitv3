{"kind":"discovery#rpcDescription","etag":"\"BgGnx7p-6wsAbOn4St99QhtBGbA/0PWY-FMDWOcLmHkrqEgRqTIlaI0\"","discoveryVersion":"v1","id":"identitytoolkit:v3","name":"identitytoolkit","version":"v3","revision":"20130709","title":"Google Identity Toolkit API","description":"Help the third party sites to implement federated login.","ownerDomain":"google.com","ownerName":"Google","icons":{"x16":"http://www.google.com/images/icons/product/search-16.gif","x32":"http://www.google.com/images/icons/product/search-32.gif"},"documentationLink":"https://developers.google.com/identity-toolkit/v3/","protocol":"rpc","rootUrl":"https://www.googleapis.com/","rpcUrl":"https://www.googleapis.com/rpc","rpcPath":"/rpc","parameters":{"alt":{"type":"string","description":"Data format for the response.","default":"json","enum":["json"],"enumDescriptions":["Responses with Content-Type of application/json"],"location":"query"},"fields":{"type":"string","description":"Selector specifying which fields to include in a partial response.","location":"query"},"key":{"type":"string","description":"API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.","location":"query"},"oauth_token":{"type":"string","description":"OAuth 2.0 token for the current user.","location":"query"},"prettyPrint":{"type":"boolean","description":"Returns response with indentations and line breaks.","default":"true","location":"query"},"quotaUser":{"type":"string","description":"Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.","location":"query"},"userIp":{"type":"string","description":"IP address of the site where the request originates. Use this if you want to enforce per-user limits.","location":"query"}},"schemas":{"Relyingparty":{"id":"Relyingparty","type":"object","description":"Request of verifying the password. Respone of deleting account. Response of creating the IDP authentication URL. Response of getting account information. Response of resetting the password. Response of getting a code for user confirmation (reset password, change email etc.). Response of verifying the IDP assertion. Respone of uploading accounts in batch. Respone of setting the account information.","properties":{"action":{"type":"string","description":"The action code."},"authUri":{"type":"string","description":"The URI used by the IDP to authenticate the user."},"context":{"type":"string","description":"The opaque value used by the client to maintain context info between the authentication request and the IDP callback."},"dateOfBirth":{"type":"string","description":"The birth date of the IdP account."},"displayName":{"type":"string","description":"The display name of the user. The name of the user."},"email":{"type":"string","description":"The email of the user. The email returned by the IdP. NOTE: The federated login user may not own the email. The user's email."},"emailRecycled":{"type":"boolean","description":"It's true if the email is recycled."},"emailVerified":{"type":"boolean","description":"The value is true if the IDP is also the email provider. It means the user owns the email."},"error":{"type":"array","description":"The error encountered while processing the account info.","items":{"type":"object","properties":{"index":{"type":"integer","description":"The index of the malformed account, starting from 0.","format":"int32"},"message":{"type":"string","description":"Detailed error message for the account info."}}}},"federatedId":{"type":"string","description":"The unique ID identifies the IdP account."},"firstName":{"type":"string","description":"The first name of the user."},"fullName":{"type":"string","description":"The full name of the user."},"idToken":{"type":"string","description":"The GITKit token for authenticated user. The ID token."},"inputEmail":{"type":"string","description":"It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email."},"kind":{"type":"string","description":"The fixed string \"identitytoolkit#relyingparty\". The fixed string identitytoolkit#relyingparty\".","default":"identitytoolkit#relyingparty"},"language":{"type":"string","description":"The language preference of the user."},"lastName":{"type":"string","description":"The last name of the user."},"localId":{"type":"string","description":"The RP local ID if it's already been mapped to the IdP account identified by the federated ID."},"nickName":{"type":"string","description":"The nick name of the user."},"oauthRequestToken":{"type":"string","description":"The user approved request token for the OpenID OAuth extension."},"oauthScope":{"type":"string","description":"The scope for the OpenID OAuth extension."},"oobCode":{"type":"string","description":"The code to be send to the user."},"originalEmail":{"type":"string","description":"The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email."},"photoUrl":{"type":"string","description":"The URI of the public accessible profiel picture."},"provider":{"type":"array","description":"The associated IDPs of the user.","items":{"type":"string"}},"providerId":{"type":"string","description":"The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the \"providerId\" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the \"identifier\" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned."},"providers":{"type":"array","description":"Existing IDP's for the user.","items":{"type":"string"}},"registered":{"type":"boolean","description":"Whether the email is registered. Whether the user is registered if the identifier is an email."},"timeZone":{"type":"string","description":"The timezone of the user."},"users":{"type":"array","description":"The info of the users.","items":{"type":"object","properties":{"dateOfBirth":{"type":"string","description":"The user's date of birth."},"displayName":{"type":"string","description":"The name of the user."},"email":{"type":"string","description":"The email returned by the IdP. NOTE: The federated login user may not own the email."},"language":{"type":"string","description":"The language of the user."},"localId":{"type":"string","description":"The local ID of the user."},"password":{"type":"string","description":"The user's hashed password.","format":"byte"},"passwordUpdatedAt":{"type":"string","description":"The timestamp when the password was last updated.","format":"int64"},"photoUrl":{"type":"string","description":"The URL of the user profile photo."},"provider":{"type":"array","description":"The IDP of the user.","items":{"type":"string"}},"salt":{"type":"string","description":"The user's password salt.","format":"byte"},"timeZone":{"type":"string","description":"The time zone of the user."},"version":{"type":"integer","description":"Version of the user's password.","format":"int32"}}}},"verifiedProvider":{"type":"array","description":"When action is 'map', contains the idps which can be used for confirmation.","items":{"type":"string"}}}},"Userinfo":{"id":"Userinfo","type":"object","description":"Template for an individual account info.","properties":{"email":{"type":"string","description":"email"},"kind":{"type":"string","description":"Identifies this object as a user info.","default":"identitytoolkit#userinfo"},"localId":{"type":"string","description":"user's id at the site"},"password":{"type":"string","description":"password","format":"byte"},"salt":{"type":"string","description":"salt","format":"byte"}}}},"methods":{"identitytoolkit.relyingparty.createAuthUri":{"id":"identitytoolkit.relyingparty.createAuthUri","description":"Creates the URI used by the IdP to authenticate the user.","parameters":{"clientId":{"type":"string","description":"The relying party OAuth client ID."},"context":{"type":"string","description":"The opaque value used by the client to maintain context info between the authentication request and the IDP callback."},"continueUri":{"type":"string","description":"The URI to which the IDP redirects the user after the federated login flow."},"identifier":{"type":"string","description":"The email or federated ID of the user."},"openidRealm":{"type":"string","description":"Optional realm for OpenID protocol. The sub string \"scheme://domain:port\" of the param \"continueUri\" is used if this is not set."},"providerId":{"type":"string","description":"The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier."}},"returns":{"$ref":"Relyingparty"}},"identitytoolkit.relyingparty.deleteAccount":{"id":"identitytoolkit.relyingparty.deleteAccount","description":"Delete user account.","parameters":{"localId":{"type":"string","description":"The local ID of the user."}},"returns":{"$ref":"Relyingparty"}},"identitytoolkit.relyingparty.getAccountInfo":{"id":"identitytoolkit.relyingparty.getAccountInfo","description":"Returns the account info.","parameters":{"email":{"type":"array","description":"The list of emails of the users to inquiry.","items":{"type":"string"}},"idToken":{"type":"string","description":"The GITKit token of the authenticated user."},"localId":{"type":"array","description":"The list of local ID's of the users to inquiry.","items":{"type":"string"}}},"returns":{"$ref":"Relyingparty"}},"identitytoolkit.relyingparty.getOobConfirmationCode":{"id":"identitytoolkit.relyingparty.getOobConfirmationCode","description":"Get a code for user action confirmation.","parameters":{"captchaResp":{"type":"string","description":"The recaptcha response from the user."},"challenge":{"type":"string","description":"The recaptcha challenge presented to the user."},"email":{"type":"string","description":"The email of the user."},"idToken":{"type":"string","description":"The user's Gitkit login token for email change."},"kind":{"type":"string","description":"The fixed string \"identitytoolkit#relyingparty\".","default":"identitytoolkit#relyingparty"},"newEmail":{"type":"string","description":"The new email if the code is for email change."},"requestType":{"type":"string","description":"The request type."},"userIp":{"type":"string","description":"The IP address of the user."}},"returns":{"$ref":"Relyingparty"}},"identitytoolkit.relyingparty.resetPassword":{"id":"identitytoolkit.relyingparty.resetPassword","description":"Set account info for a user.","parameters":{"email":{"type":"string","description":"The email address of the user."},"newPassword":{"type":"string","description":"The new password inputted by the user."},"oldPassword":{"type":"string","description":"The old password inputted by the user."},"oobCode":{"type":"string","description":"The confirmation code."}},"returns":{"$ref":"Relyingparty"}},"identitytoolkit.relyingparty.setAccountInfo":{"id":"identitytoolkit.relyingparty.setAccountInfo","description":"Set account info for a user.","parameters":{"displayName":{"type":"string","description":"The name of the user."},"email":{"type":"string","description":"The email of the user."},"emailVerified":{"type":"boolean","description":"Mark the email as verified or not."},"idToken":{"type":"string","description":"The GITKit token of the authenticated user."},"localId":{"type":"string","description":"The local ID of the user."},"oobCode":{"type":"string","description":"The out-of-band code of the change email request."},"password":{"type":"string","description":"The new password of the user."},"provider":{"type":"array","description":"The associated IDPs of the user.","items":{"type":"string"}},"upgradeToFederatedLogin":{"type":"boolean","description":"Mark the user to upgrade to federated login."}},"returns":{"$ref":"Relyingparty"}},"identitytoolkit.relyingparty.uploadAccount":{"id":"identitytoolkit.relyingparty.uploadAccount","description":"Batch upload existing user accounts.","parameters":{"hashAlgorithm":{"type":"string"},"memoryCost":{"type":"integer","format":"int32"},"rounds":{"type":"integer","format":"int32"},"saltSeparator":{"type":"string","format":"byte"},"signerKey":{"type":"string","format":"byte"},"userAccount":{"type":"array","description":"The account info to be stored.","items":{"$ref":"Userinfo"}}},"returns":{"$ref":"Relyingparty"}},"identitytoolkit.relyingparty.verifyAssertion":{"id":"identitytoolkit.relyingparty.verifyAssertion","description":"Verifies the assertion returned by the IdP.","parameters":{"pendingIdToken":{"type":"string","description":"The GITKit token for the non-trusted IDP pending to be confirmed by the user."},"postBody":{"type":"string","description":"The post body if the request is a HTTP POST."},"requestUri":{"type":"string","description":"The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP."}},"returns":{"$ref":"Relyingparty"}},"identitytoolkit.relyingparty.verifyPassword":{"id":"identitytoolkit.relyingparty.verifyPassword","description":"Verifies the user entered password.","parameters":{"email":{"type":"string","description":"The email of the user."},"password":{"type":"string","description":"The password inputed by the user."},"pendingIdToken":{"type":"string","description":"The GITKit token for the non-trusted IDP, which is to be confirmed by the user."}},"returns":{"$ref":"Relyingparty"}}}}